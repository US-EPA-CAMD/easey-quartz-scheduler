name: Release Branch Workflow

on:
  push:
    branches: [ release/v* ]

jobs:
  Build-Test-Package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout devops repo
        uses: actions/checkout@v2
        with:
          repository: US-EPA-CAMD/devops
          path: devops
      - name: Configure Env Vars
        run: devops/scripts/environment-variables-noTag.sh
        env:
          ENV_VAR_PREFIX: EASEY
      - name: Build
        run: |
          echo "--------------------------------------"
          echo "---------- dotnet/build.sh -----------"
          echo "--------------------------------------"

          echo "Installing dependencies..."
          cd admin
          dotnet restore

          echo "Building..."
          CI=false dotnet build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Run Unit Tests
      #   run: |
      #     echo "--------------------------------------"
      #     echo "-------- dotnet/unit-tests.sh --------"
      #     echo "--------------------------------------"

      #     echo "Running Unit tests... "
      #     cd admin
      #     CI=true dotnet run tests
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Package App
        run: devops/scripts/package-artifact.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACTS_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACTS_STORAGE_SECRET_ACCESS_KEY }}
  Test-Deployment:
    needs: Build-Test-Package
    runs-on: ubuntu-latest
    environment:
      name: Test
      url: https://easey-tst.app.cloud.gov/quartz
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout devops repo
        uses: actions/checkout@v2
        with:
          repository: US-EPA-CAMD/devops
          path: devops
      - name: Configure Env Vars
        run: devops/scripts/environment-variables-noTag.sh TEST
        env:
          ENV_VAR_PREFIX: EASEY
      - name: Install cf cli
        run: devops/scripts/install-cf-cli.sh
      - name: Login to cloud.gov
        run: devops/scripts/cf-login.sh
        env:
          CF_USERNAME: ${{ secrets.CF_TST_DEPLOYMENT_SVC }}
          CF_PASSWORD: ${{ secrets.CF_TST_DEPLOYMENT_SVC_PWD }}
      - name: Download Deployment Package
        run: devops/scripts/download-artifact.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACTS_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACTS_STORAGE_SECRET_ACCESS_KEY }}
      - name: Init Application
        run: devops/scripts/cf-app-init.sh
      - name: Configure Env Vars (secrets)
        run: |
          cf set-env $APP_NAME EASEY_QUARTZ_SCHEDULER_EVALUATIONS_API_KEYS $ECMPS_API_KEY
          cf set-env $APP_NAME EASEY_QUARTZ_SCHEDULER_NOTIFICATIONS_API_KEYS "${ECMPS_API_KEY},${CAMPD_API_KEY}"
        env:
          ECMPS_API_KEY: ${{ secrets.ECMPS_NON_PROD_API_KEY }}
          CAMPD_API_KEY: ${{ secrets.CAMPD_NON_PROD_API_KEY }}
      - name: Deploy
        run: devops/scripts/deploy.sh
  Beta-Deployment:
    needs: Build-Test-Package
    runs-on: ubuntu-latest
    environment:
      name: Beta
      url: https://easey-beta.app.cloud.gov/quartz
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout devops repo
        uses: actions/checkout@v2
        with:
          repository: US-EPA-CAMD/devops
          path: devops
      - name: Configure Env Vars
        run: devops/scripts/environment-variables-noTag.sh BETA
        env:
          ENV_VAR_PREFIX: EASEY
      - name: Install cf cli
        run: devops/scripts/install-cf-cli.sh
      - name: Login to cloud.gov
        run: devops/scripts/cf-login.sh
        env:
          CF_USERNAME: ${{ secrets.CF_BETA_DEPLOYMENT_SVC }}
          CF_PASSWORD: ${{ secrets.CF_BETA_DEPLOYMENT_SVC_PWD }}
      - name: Download Deployment Package
        run: devops/scripts/download-artifact.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACTS_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACTS_STORAGE_SECRET_ACCESS_KEY }}
      - name: Init Application
        run: devops/scripts/cf-app-init.sh
      - name: Configure Env Vars (secrets)
        run: |
          cf set-env $APP_NAME EASEY_QUARTZ_SCHEDULER_EVALUATIONS_API_KEYS $ECMPS_API_KEY
          cf set-env $APP_NAME EASEY_QUARTZ_SCHEDULER_NOTIFICATIONS_API_KEYS "${ECMPS_API_KEY},${CAMPD_API_KEY}"
        env:
          ECMPS_API_KEY: ${{ secrets.ECMPS_NON_PROD_API_KEY }}
          CAMPD_API_KEY: ${{ secrets.CAMPD_NON_PROD_API_KEY }}
      - name: Deploy
        run: devops/scripts/deploy.sh
  Stage-Deployment:
    needs: Test-Deployment
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://easey-stg.app.cloud.gov/quartz
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout devops repo
        uses: actions/checkout@v2
        with:
          repository: US-EPA-CAMD/devops
          path: devops
      - name: Configure Env Vars
        run: devops/scripts/environment-variables-noTag.sh STAGE
        env:
          ENV_VAR_PREFIX: EASEY
      - name: Install cf cli
        run: devops/scripts/install-cf-cli.sh
      - name: Login to cloud.gov
        run: devops/scripts/cf-login.sh
        env:
          CF_USERNAME: ${{ secrets.CF_STG_DEPLOYMENT_SVC }}
          CF_PASSWORD: ${{ secrets.CF_STG_DEPLOYMENT_SVC_PWD }}
      - name: Download Deployment Package
        run: devops/scripts/download-artifact.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACTS_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACTS_STORAGE_SECRET_ACCESS_KEY }}
      - name: Init Application
        run: devops/scripts/cf-app-init.sh
      - name: Configure Env Vars (secrets)
        run: |
          cf set-env $APP_NAME EASEY_QUARTZ_SCHEDULER_API_KEY $EASEY_QUARTZ_SCHEDULER_API_KEY
        env:
          EASEY_QUARTZ_SCHEDULER_API_KEY: ${{ secrets.QUARTZ_NON_PROD_API_KEY }}
      - name: Deploy
        run: devops/scripts/deploy.sh
